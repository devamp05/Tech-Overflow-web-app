{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './Comment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment({\n  postId,\n  username\n}) {\n  _s();\n  const comment = useRef();\n  function addComment() {\n    fetch('http://localhost:8080/addComment', {\n      method: 'Post',\n      body: new URLSearchParams({\n        username: username,\n        comment: comment.current.value,\n        postId: postId\n      }),\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response).then(data => {\n      console.log(data);\n    }).then(() => {\n      comment.current.value = '';\n    }).catch(error => console.error(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"comment\",\n      children: \"Add comment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"commentId\",\n        ref: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addComment,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"zO30MhTsyTqjbJ8wDyAkCONu6fk=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Comment","postId","username","_s","comment","addComment","fetch","method","body","URLSearchParams","current","value","headers","then","response","data","console","log","catch","error","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/Comment.js"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport './Comment.css';\r\n\r\nfunction Comment({ postId, username }) {\r\n  const comment = useRef();\r\n\r\n  function addComment() {\r\n    fetch('http://localhost:8080/addComment', {\r\n      method: 'Post',\r\n      body: new URLSearchParams({\r\n        username: username,\r\n        comment: comment.current.value,\r\n        postId: postId,\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n    })\r\n      .then((response) => response)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .then(() => {\r\n        comment.current.value = '';\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <div className=\"commentClass\">\r\n      <label htmlFor=\"comment\">Add comment:</label>\r\n      <div className=\"comment-input\">\r\n        <input type=\"text\" id=\"commentId\" ref={comment} />\r\n        <button onClick={addComment}>Post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAMC,OAAO,GAAGP,MAAM,CAAC,CAAC;EAExB,SAASQ,UAAUA,CAAA,EAAG;IACpBC,KAAK,CAAC,kCAAkC,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,IAAIC,eAAe,CAAC;QACxBP,QAAQ,EAAEA,QAAQ;QAClBE,OAAO,EAAEA,OAAO,CAACM,OAAO,CAACC,KAAK;QAC9BV,MAAM,EAAEA;MACV,CAAC,CAAC;MACFW,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAAC,CAC5BD,IAAI,CAAEE,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CACDF,IAAI,CAAC,MAAM;MACVT,OAAO,CAACM,OAAO,CAACC,KAAK,GAAG,EAAE;IAC5B,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C;EAEA,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtB,OAAA;MAAOuB,OAAO,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC7C3B,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BtB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,WAAW;QAACC,GAAG,EAAEzB;MAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD3B,OAAA;QAAQ+B,OAAO,EAAEzB,UAAW;QAAAgB,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CAlCQH,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}