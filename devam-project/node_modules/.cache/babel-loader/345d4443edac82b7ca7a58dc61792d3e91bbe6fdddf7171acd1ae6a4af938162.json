{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\CommentsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CommentList.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentList() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const {\n    postId\n  } = useParams();\n  useEffect(() => {\n    getComments();\n  }); // Include postId in the dependency array\n\n  function getComments() {\n    fetch(`http://localhost:8080/getComments?postId=${postId}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response.json()).then(response => setComments(response)).catch(error => console.error(error));\n  }\n\n  // To fetch the child comments if there are any\n  function fetchChildComments(commentId, indentLevel = 1) {\n    fetch(`http://localhost:8080/getChildComments?commentId=${commentId}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response.json()).then(childComments => {\n      // Recursively fetch and display child comments\n      childComments.forEach(childComment => {\n        fetchChildComments(childComment.id, indentLevel + 1); // Increase the indent level for each level of nesting\n      });\n\n      setComments([...comments, {\n        ...childComments[0],\n        indentLevel\n      }]); // Update state with both parent and child comments\n    }).catch(error => console.error(error));\n  }\n  function handleReply(commentId) {\n    // Handle the reply action here (e.g., open a modal, navigate to a new page, etc.)\n    console.log(`Reply to comment ${commentId}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentsListClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Posted comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `comment-item indent-${comment.indentLevel}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-username\",\n            children: [comment.createdBy, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), \" \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reply-button\",\n          onClick: () => handleReply(comment.c_id),\n          children: [\"Reply \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), comment.numbe_of_child_comments > 0 && fetchChildComments(comment.c_id, comment.indentLevel)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentList, \"mjcMEWhdGVTbN+/eoGitwcL61mI=\", false, function () {\n  return [useParams];\n});\n_c = CommentList;\n;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","CommentList","_s","comments","setComments","postId","getComments","fetch","method","headers","then","response","json","catch","error","console","fetchChildComments","commentId","indentLevel","childComments","forEach","childComment","id","handleReply","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","createdBy","onClick","c_id","numbe_of_child_comments","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/CommentsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './CommentList.css'; // Import your CSS file\r\n\r\nfunction CommentList() {\r\n  const [comments, setComments] = useState([]);\r\n  const { postId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n  }); // Include postId in the dependency array\r\n\r\n  function getComments() {\r\n    fetch(`http://localhost:8080/getComments?postId=${postId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => setComments(response))\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  // To fetch the child comments if there are any\r\n  function fetchChildComments(commentId, indentLevel = 1) {\r\n    fetch(`http://localhost:8080/getChildComments?commentId=${commentId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((childComments) => {\r\n        // Recursively fetch and display child comments\r\n        childComments.forEach((childComment) => {\r\n          fetchChildComments(childComment.id, indentLevel + 1); // Increase the indent level for each level of nesting\r\n        });\r\n        setComments([...comments, { ...childComments[0], indentLevel }]); // Update state with both parent and child comments\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  function handleReply(commentId) {\r\n    // Handle the reply action here (e.g., open a modal, navigate to a new page, etc.)\r\n    console.log(`Reply to comment ${commentId}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"commentsListClass\">\r\n      <p>Posted comments:</p>\r\n      {comments.map((comment) => (\r\n        <div key={comment.id} className={`comment-item indent-${comment.indentLevel}`}>\r\n          <div className=\"comment-content\">\r\n            <p>\r\n              <span className=\"comment-username\">{comment.createdBy}:</span> {comment.comment}\r\n            </p>\r\n          </div>\r\n          <div className=\"reply-button-container\">\r\n            <button className=\"reply-button\" onClick={() => handleReply(comment.c_id)}>\r\n              Reply <i className=\"fa fa-reply\"></i>\r\n            </button>\r\n          </div>\r\n          {comment.numbe_of_child_comments > 0 && fetchChildComments(comment.c_id, comment.indentLevel)}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CommentList;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}