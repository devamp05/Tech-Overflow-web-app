{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\Channels.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import { Link, useParams } from \"react-router-dom\";\n// import './Channels.css'\n\n// function Channels()\n// {\n//     const { username } = useParams();\n//     const [getList, setList] = useState([]);\n//     // To call geCommentst() everytime on load\n//     useEffect(() => {\n//         getChannels();\n//     });\n//     function getChannels()\n//     {\n//         fetch('http://localhost:8080/getChannels',\n//         {\n//             method: 'GET',\n//             // body: new URLSearchParams({\n//             //     postId: postId\n//             //     }),\n//             headers: {\n//                 \"Content-type\": \"application/x-www-form-urlencoded\"\n//                 }\n//         }\n//         ).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error))\n//         // console.log(getList);\n//     }\n//     return(\n//         <>\n//         <div className=\"channelsListClass\">\n//             {getList.map(channel => (\n//                 <div className=\"channelCard\">\n//                     <Link to={`/getPosts/${channel.id}`}> \n//                         <p>{channel.name}</p>\n//                         <p> {channel.description} </p>\n//                     </Link>\n//                 </div>\n//             ))}\n//         </div>\n//         <Link to={`/addChannel/${username}`}>Add</Link>\n//         <br></br>\n//         <Link to='/'>Landings</Link>\n//         </>\n//     )\n// };\n\n// export default Channels;\n\nimport { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./Channels.css\"; // Make sure to import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Channels() {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [getList, setList] = useState([]);\n\n  // Use useEffect with an empty dependency array to call getChannels only once on mount\n  useEffect(() => {\n    getChannels();\n  }, []);\n  function getChannels() {\n    fetch('http://localhost:8080/getChannels', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channelsListClass\",\n      children: getList.map(channel => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/getPosts/${channel.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channelCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: channel.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: channel.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created by: \", channel.createdBy]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, channel.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linkContainer\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"linkCard\",\n        to: `/addChannel/${username}`,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linkContainer\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"linkCard\",\n        to: \"/\",\n        children: \"Landings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Channels, \"Ms1VE6Y7tkrnkai/TlmgmBKxUY4=\", false, function () {\n  return [useParams];\n});\n_c = Channels;\nexport default Channels;\nvar _c;\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["useState","useEffect","Link","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Channels","_s","username","getList","setList","getChannels","fetch","method","headers","then","response","json","catch","error","console","children","className","map","channel","to","id","name","fileName","_jsxFileName","lineNumber","columnNumber","description","createdBy","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/Channels.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import { Link, useParams } from \"react-router-dom\";\r\n// import './Channels.css'\r\n\r\n// function Channels()\r\n// {\r\n//     const { username } = useParams();\r\n//     const [getList, setList] = useState([]);\r\n//     // To call geCommentst() everytime on load\r\n//     useEffect(() => {\r\n//         getChannels();\r\n//     });\r\n//     function getChannels()\r\n//     {\r\n//         fetch('http://localhost:8080/getChannels',\r\n//         {\r\n//             method: 'GET',\r\n//             // body: new URLSearchParams({\r\n//             //     postId: postId\r\n//             //     }),\r\n//             headers: {\r\n//                 \"Content-type\": \"application/x-www-form-urlencoded\"\r\n//                 }\r\n//         }\r\n//         ).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error))\r\n//         // console.log(getList);\r\n//     }\r\n//     return(\r\n//         <>\r\n//         <div className=\"channelsListClass\">\r\n//             {getList.map(channel => (\r\n//                 <div className=\"channelCard\">\r\n//                     <Link to={`/getPosts/${channel.id}`}> \r\n//                         <p>{channel.name}</p>\r\n//                         <p> {channel.description} </p>\r\n//                     </Link>\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//         <Link to={`/addChannel/${username}`}>Add</Link>\r\n//         <br></br>\r\n//         <Link to='/'>Landings</Link>\r\n//         </>\r\n//     )\r\n// };\r\n\r\n// export default Channels;\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport \"./Channels.css\"; // Make sure to import your CSS file\r\n\r\nfunction Channels() {\r\n  const { username } = useParams();\r\n  const [getList, setList] = useState([]);\r\n\r\n  // Use useEffect with an empty dependency array to call getChannels only once on mount\r\n  useEffect(() => {\r\n    getChannels();\r\n  }, []);\r\n\r\n  function getChannels() {\r\n    fetch('http://localhost:8080/getChannels', {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-type\": \"application/x-www-form-urlencoded\"\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => setList(response))\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"channelsListClass\">\r\n        {getList.map(channel => (\r\n          <Link to={`/getPosts/${channel.id}`} >\r\n          <div className=\"channelCard\" key={channel.id}>\r\n            <p>{channel.name}</p>\r\n            <p>{channel.description}</p>\r\n            <p>Created by: {channel.createdBy}</p>\r\n          </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n      <div className=\"linkContainer\">\r\n        <Link className=\"linkCard\" to={`/addChannel/${username}`}>\r\n          Add\r\n        </Link>\r\n      </div>\r\n      <div className=\"linkContainer\">\r\n        <Link className=\"linkCard\" to=\"/\">\r\n          Landings\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n  \r\n}\r\n\r\nexport default Channels;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}