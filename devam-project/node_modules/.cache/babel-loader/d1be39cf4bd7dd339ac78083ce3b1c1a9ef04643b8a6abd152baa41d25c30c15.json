{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\CommentsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CommentList.css';\nimport { response } from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentList() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [replyingTo, setReplyingTo] = useState(null); // Track the comment being replied to\n  const [newComment, setNewComment] = useState(''); // Track the content of the new comment\n  const {\n    username,\n    postId\n  } = useParams();\n  useEffect(() => {\n    // Fetch comments initially\n    getComments();\n  });\n  function getComments() {\n    fetch(`http://localhost:8080/getComments?postId=${postId}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response.json()).then(response => setComments(response)).catch(error => console.error(error));\n  }\n  function fetchChildComments(commentId, indentLevel = 1) {\n    fetch(`http://localhost:8080/getChildComments?commentId=${commentId}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response.json()).then(childComments => {\n      // Recursively fetch and display child comments\n      childComments.forEach(childComment => {\n        fetchChildComments(childComment.id, indentLevel + 1); // Increase the indent level for each level of nesting\n      });\n\n      setComments([...comments, {\n        ...childComments[0],\n        indentLevel\n      }]);\n    }).catch(error => console.error(error));\n  }\n  function handleReply(commentId) {\n    // Set the comment being replied to and clear the new comment input\n    setReplyingTo(commentId);\n    setNewComment('');\n  }\n  function handleCancelReply() {\n    // Clear the comment being replied to\n    setReplyingTo(null);\n  }\n  function handlePostReply(commentId) {\n    console.log(`Post reply to comment ${commentId}: ${newComment}`);\n\n    // Add the comment in the database\n    fetch('http://localhost:8080/addChildComment', {\n      method: 'POST',\n      body: new URLSearchParams({\n        username: username,\n        comment: newComment,\n        parentId: commentId\n      }),\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => console.log(response)).catch(error => console.log(error));\n\n    // Clear the comment being replied to and reset the new comment input\n    setReplyingTo(null);\n    setNewComment('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentsListClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Posted comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `comment-item indent-${comment.indentLevel}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-username\",\n            children: [comment.createdBy, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), \" \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reply-button\",\n          onClick: () => handleReply(comment.c_id),\n          children: [\"Reply \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), comment.numbe_of_child_comments > 0 && fetchChildComments(comment.c_id, comment.indentLevel), replyingTo === comment.c_id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your reply...\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"post-reply-button\",\n          onClick: () => handlePostReply(comment.c_id),\n          children: \"Post Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-reply-button\",\n          onClick: handleCancelReply,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentList, \"Pmy44k0J1K/KYvpmHwLs2qWqRCA=\", false, function () {\n  return [useParams];\n});\n_c = CommentList;\n;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","response","jsxDEV","_jsxDEV","CommentList","_s","comments","setComments","replyingTo","setReplyingTo","newComment","setNewComment","username","postId","getComments","fetch","method","headers","then","json","catch","error","console","fetchChildComments","commentId","indentLevel","childComments","forEach","childComment","id","handleReply","handleCancelReply","handlePostReply","log","body","URLSearchParams","comment","parentId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","createdBy","onClick","c_id","numbe_of_child_comments","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/CommentsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './CommentList.css';\r\nimport { response } from 'express';\r\n\r\nfunction CommentList() {\r\n  const [comments, setComments] = useState([]);\r\n  const [replyingTo, setReplyingTo] = useState(null); // Track the comment being replied to\r\n  const [newComment, setNewComment] = useState(''); // Track the content of the new comment\r\n  const { username, postId } = useParams();\r\n\r\n  useEffect(() => {\r\n    // Fetch comments initially\r\n    getComments();\r\n  });\r\n\r\n  function getComments() {\r\n    fetch(`http://localhost:8080/getComments?postId=${postId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => setComments(response))\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  function fetchChildComments(commentId, indentLevel = 1) {\r\n    fetch(`http://localhost:8080/getChildComments?commentId=${commentId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((childComments) => {\r\n        // Recursively fetch and display child comments\r\n        childComments.forEach((childComment) => {\r\n          fetchChildComments(childComment.id, indentLevel + 1); // Increase the indent level for each level of nesting\r\n        });\r\n        setComments([...comments, { ...childComments[0], indentLevel }]);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  function handleReply(commentId) {\r\n    // Set the comment being replied to and clear the new comment input\r\n    setReplyingTo(commentId);\r\n    setNewComment('');\r\n  }\r\n\r\n  function handleCancelReply() {\r\n    // Clear the comment being replied to\r\n    setReplyingTo(null);\r\n  }\r\n\r\n  function handlePostReply(commentId) {\r\n    console.log(`Post reply to comment ${commentId}: ${newComment}`);\r\n\r\n    // Add the comment in the database\r\n    fetch('http://localhost:8080/addChildComment', {\r\n      method: 'POST',\r\n      body: new URLSearchParams({\r\n        username: username,\r\n        comment: newComment,\r\n        parentId: commentId\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded',\r\n      }\r\n    }).then(response => console.log(response))\r\n    .catch(error => console.log(error));\r\n\r\n    // Clear the comment being replied to and reset the new comment input\r\n    setReplyingTo(null);\r\n    setNewComment('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"commentsListClass\">\r\n      <p>Posted comments:</p>\r\n      {comments.map((comment) => (\r\n        <div key={comment.id} className={`comment-item indent-${comment.indentLevel}`}>\r\n          <div className=\"comment-content\">\r\n            <p>\r\n              <span className=\"comment-username\">{comment.createdBy}:</span> {comment.comment}\r\n            </p>\r\n          </div>\r\n          <div className=\"reply-button-container\">\r\n            <button className=\"reply-button\" onClick={() => handleReply(comment.c_id)}>\r\n              Reply <i className=\"fa fa-reply\"></i>\r\n            </button>\r\n          </div>\r\n          {comment.numbe_of_child_comments > 0 && fetchChildComments(comment.c_id, comment.indentLevel)}\r\n          {replyingTo === comment.c_id && (\r\n            <div className=\"reply-input-container\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Type your reply...\"\r\n                value={newComment}\r\n                onChange={(e) => setNewComment(e.target.value)}\r\n              />\r\n              <button className=\"post-reply-button\" onClick={() => handlePostReply(comment.c_id)}>\r\n                Post Reply\r\n              </button>\r\n              <button className=\"cancel-reply-button\" onClick={handleCancelReply}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}