{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport { Link, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./PostList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostList() {\n  _s();\n  const [getList, setList] = useState([]);\n  const {\n    username,\n    channelId\n  } = useParams();\n\n  // To call get() only once on mount, use an empty dependency array\n  useEffect(() => {\n    get();\n  }, []);\n  function get() {\n    fetch(`http://localhost:8080/getPosts?channelId=${channelId}`).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: getList.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/gotoPost/${username}/${channelId}/${post.id}`,\n          children: \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/addPost/${username}/${channelId}`,\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/getChannels/${username}`,\n      children: \"Channels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Landings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PostList, \"PgM8BumK0bWvakspuRe9cpk8bk8=\", false, function () {\n  return [useParams];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["Link","useParams","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","PostList","_s","getList","setList","username","channelId","get","fetch","then","response","json","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","topic","content","to","id","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/PostList.js"],"sourcesContent":["import { Link, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./PostList.css\";\r\n\r\nfunction PostList() {\r\n  const [getList, setList] = useState([]);\r\n\r\n  const { username, channelId } = useParams();\r\n\r\n  // To call get() only once on mount, use an empty dependency array\r\n  useEffect(() => {\r\n    get();\r\n  }, []);\r\n\r\n  function get() {\r\n    fetch(`http://localhost:8080/getPosts?channelId=${channelId}`)\r\n      .then(response => response.json())\r\n      .then(response => setList(response))\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>All Posts</h2>\r\n      <div className=\"post-list\">\r\n        {getList.map(post => (\r\n          <div key={post.id} className=\"post-card\">\r\n            <h3>{post.topic}</h3>\r\n            <p>{post.content}</p>\r\n            {/* You can add more details from the 'post' object */}\r\n            <Link to={`/gotoPost/${username}/${channelId}/${post.id}`}>Read More</Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <br />\r\n      <Link to={`/addPost/${username}/${channelId}`}>Add Post</Link>\r\n      <br />\r\n      <Link to={`/getChannels/${username}`}>Channels</Link>\r\n      <br />\r\n      <Link to=\"/\">Landings</Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}