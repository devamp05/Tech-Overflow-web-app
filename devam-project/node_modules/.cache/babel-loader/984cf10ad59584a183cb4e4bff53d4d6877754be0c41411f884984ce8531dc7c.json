{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport { Link, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./PostList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostList() {\n  _s();\n  const [getList, setList] = useState([]);\n  const {\n    username,\n    channelId\n  } = useParams();\n\n  // To call get() only once on mount, use an empty dependency array\n  useEffect(() => {\n    get();\n  });\n  function get() {\n    fetch(`http://localhost:8080/getPosts?channelId=${channelId}`).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error));\n  }\n\n  // admin account delete posts\n  function deleteChannel(channelId) {\n    fetch(`http://localhost:8080/deleteChannel?channelId=${channelId}`, {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(response => response.json()).then(response => getChannels()).catch(error => console.error(error));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: getList.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/gotoPost/${username}/${channelId}/${post.id}`,\n          children: \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), username === 'adminAccount' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePost(channelId, post.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/addPost/${username}/${channelId}`,\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/getChannels/${username}`,\n      children: \"Channels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Landings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PostList, \"PgM8BumK0bWvakspuRe9cpk8bk8=\", false, function () {\n  return [useParams];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["Link","useParams","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","PostList","_s","getList","setList","username","channelId","get","fetch","then","response","json","catch","error","console","deleteChannel","method","headers","getChannels","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","topic","to","id","onClick","deletePost","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/PostList.js"],"sourcesContent":["import { Link, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./PostList.css\";\r\n\r\nfunction PostList() {\r\n  const [getList, setList] = useState([]);\r\n\r\n  const { username, channelId } = useParams();\r\n\r\n  // To call get() only once on mount, use an empty dependency array\r\n  useEffect(() => {\r\n    get();\r\n  });\r\n\r\n  function get() {\r\n    fetch(`http://localhost:8080/getPosts?channelId=${channelId}`)\r\n      .then(response => response.json())\r\n      .then(response => setList(response))\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  // admin account delete posts\r\n  function deleteChannel(channelId)\r\n  {\r\n    fetch(`http://localhost:8080/deleteChannel?channelId=${channelId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-type\": \"application/x-www-form-urlencoded\"\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => getChannels())\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>All Posts</h2>\r\n      <div className=\"post-list\">\r\n        {getList.map(post => (\r\n          <div key={post.id} className=\"post-card\">\r\n            <h3>{post.topic}</h3>\r\n            <Link to={`/gotoPost/${username}/${channelId}/${post.id}`}>Read More</Link>\r\n            <br />\r\n            {username === 'adminAccount' && (\r\n              <button onClick={() => deletePost(channelId, post.id)} >delete</button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <br />\r\n      <Link to={`/addPost/${username}/${channelId}`}>Add Post</Link>\r\n      <br />\r\n      <Link to={`/getChannels/${username}`}>Channels</Link>\r\n      <br />\r\n      <Link to=\"/\">Landings</Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}