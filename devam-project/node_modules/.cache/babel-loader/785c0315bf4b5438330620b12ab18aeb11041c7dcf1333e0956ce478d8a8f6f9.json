{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\CommentsList.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import { Link, useParams } from \"react-router-dom\";\n\n// function CommentLists({postId})\n// {\n//     const [getList, setList] = useState([]);\n//     // To call geCommentst() everytime on load\n//     useEffect(() => {\n//         getComments();\n//     });\n//     function getComments()\n//     {\n//         fetch('http://localhost:8080/getComments?postId='+postId,\n//         {\n//             method: 'GET',\n//             // body: new URLSearchParams({\n//             //     postId: postId\n//             //     }),\n//             headers: {\n//                 \"Content-type\": \"application/x-www-form-urlencoded\"\n//                 }\n//         }\n//         ).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error))\n//         // console.log(getList);\n//     }\n//     return(\n//         <div className=\"commentsListClass\" >\n//             get posted comments here\n//             {getList.map(comment => (\n//             <div>                \n//                 <p> {comment.comment}</p>\n//             </div>\n//             ))}\n//         </div>\n//     )\n// };\n\n// export default CommentLists;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CommentList.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentList() {\n  _s();\n  const [getList, setList] = useState([]);\n  const {\n    postId\n  } = useParams();\n  useEffect(() => {\n    getComments();\n  }); // Include postId in the dependency array\n\n  function getComments() {\n    fetch(`http://localhost:8080/getComments?postId=${postId}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentsListClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Posted comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), getList.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-username\",\n          children: [comment.createdBy, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), \" \", comment.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), comment.numbe_of_child_comments > 0 && fetchChildComments(comment.id, comment.indentLevel)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentList, \"mK+U1F9D0B9cOzjM4Ih1uUybSrI=\", false, function () {\n  return [useParams];\n});\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","CommentList","_s","getList","setList","postId","getComments","fetch","method","headers","then","response","json","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","createdBy","numbe_of_child_comments","fetchChildComments","id","indentLevel","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/CommentsList.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import { Link, useParams } from \"react-router-dom\";\r\n\r\n\r\n// function CommentLists({postId})\r\n// {\r\n//     const [getList, setList] = useState([]);\r\n//     // To call geCommentst() everytime on load\r\n//     useEffect(() => {\r\n//         getComments();\r\n//     });\r\n//     function getComments()\r\n//     {\r\n//         fetch('http://localhost:8080/getComments?postId='+postId,\r\n//         {\r\n//             method: 'GET',\r\n//             // body: new URLSearchParams({\r\n//             //     postId: postId\r\n//             //     }),\r\n//             headers: {\r\n//                 \"Content-type\": \"application/x-www-form-urlencoded\"\r\n//                 }\r\n//         }\r\n//         ).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error))\r\n//         // console.log(getList);\r\n//     }\r\n//     return(\r\n//         <div className=\"commentsListClass\" >\r\n//             get posted comments here\r\n//             {getList.map(comment => (\r\n//             <div>                \r\n//                 <p> {comment.comment}</p>\r\n//             </div>\r\n//             ))}\r\n//         </div>\r\n//     )\r\n// };\r\n\r\n// export default CommentLists;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './CommentList.css'; // Import your CSS file\r\n\r\nfunction CommentList() {\r\n  const [getList, setList] = useState([]);\r\n  const { postId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n  }); // Include postId in the dependency array\r\n\r\n  function getComments() {\r\n    fetch(`http://localhost:8080/getComments?postId=${postId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => setList(response))\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <div className=\"commentsListClass\">\r\n      <p>Posted comments:</p>\r\n      {getList.map((comment) => (\r\n        <div key={comment.id} className=\"comment-item\">\r\n          <p>\r\n            <span className=\"comment-username\">{comment.createdBy}:</span> {comment.comment}\r\n          </p>\r\n          {comment.numbe_of_child_comments > 0 && fetchChildComments(comment.id, comment.indentLevel)}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentList;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM;IAAES;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACdS,WAAW,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC;;EAEJ,SAASA,WAAWA,CAAA,EAAG;IACrBC,KAAK,CAAE,4CAA2CF,MAAO,EAAC,EAAE;MAC1DG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAKP,OAAO,CAACO,QAAQ,CAAC,CAAC,CACrCE,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C;EAEA,oBACEd,OAAA;IAAKgB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCjB,OAAA;MAAAiB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACtBlB,OAAO,CAACmB,GAAG,CAAEC,OAAO,iBACnBvB,OAAA;MAAsBgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC5CjB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAMgB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAAEM,OAAO,CAACC,SAAS,EAAC,GAAC;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC,EAACE,OAAO,CAACA,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,EACHE,OAAO,CAACE,uBAAuB,GAAG,CAAC,IAAIC,kBAAkB,CAACH,OAAO,CAACI,EAAE,EAAEJ,OAAO,CAACK,WAAW,CAAC;IAAA,GAJnFL,OAAO,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKf,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CAjCQD,WAAW;EAAA,QAECH,SAAS;AAAA;AAAA+B,EAAA,GAFrB5B,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}