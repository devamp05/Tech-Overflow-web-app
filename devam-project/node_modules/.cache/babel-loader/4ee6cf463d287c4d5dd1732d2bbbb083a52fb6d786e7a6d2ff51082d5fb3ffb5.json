{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\Channels.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Channels({\n  postId\n}) {\n  _s();\n  const [getList, setList] = useState([]);\n  // To call geCommentst() everytime on load\n  useEffect(() => {\n    getChannels();\n  });\n  function addChannel() {\n    fetch('http://localhost:8080/addChannel', {\n      method: 'POST',\n      body: new URLSearchParams({\n        name: \"CMPT353\",\n        description: \"CMPT 353 related information.\"\n      })\n    }).then(response => response).then(data => {\n      console.log(data);\n    }).then(alert(\"Channel added Successfully!\")).catch(error => console.error(error));\n  }\n  function getChannels() {\n    fetch('http://localhost:8080/getChannels', {\n      method: 'GET',\n      // body: new URLSearchParams({\n      //     postId: postId\n      //     }),\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error));\n    // console.log(getList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channelsListClass\",\n    children: [getList.map(channel => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", channel.Name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addChannel,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Channels, \"QeJIt1OGIzLqKm9MlYFycMb6tSc=\");\n_c = Channels;\n;\nexport default Channels;\nvar _c;\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Channels","postId","_s","getList","setList","getChannels","addChannel","fetch","method","body","URLSearchParams","name","description","then","response","data","console","log","alert","catch","error","headers","json","className","children","map","channel","Name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/Channels.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nfunction Channels({ postId })\r\n{\r\n    const [getList, setList] = useState([]);\r\n    // To call geCommentst() everytime on load\r\n    useEffect(() => {\r\n        getChannels();\r\n    });\r\n    function addChannel()\r\n    {\r\n        fetch('http://localhost:8080/addChannel',\r\n        {\r\n            method: 'POST',\r\n            body: new URLSearchParams({\r\n                name: \"CMPT353\",\r\n                description: \"CMPT 353 related information.\"\r\n            }),\r\n        }).then(response => response)\r\n        .then(data =>\r\n          {\r\n            console.log(data)\r\n          }).then(alert(\"Channel added Successfully!\"))\r\n        .catch(error => console.error(error))\r\n    }\r\n    function getChannels()\r\n    {\r\n        fetch('http://localhost:8080/getChannels',\r\n        {\r\n            method: 'GET',\r\n            // body: new URLSearchParams({\r\n            //     postId: postId\r\n            //     }),\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded\"\r\n                }\r\n        }\r\n        ).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error))\r\n        // console.log(getList);\r\n    }\r\n    return(\r\n        <div className=\"channelsListClass\" >\r\n            {getList.map(channel => (\r\n            <div>\r\n                <p> {channel.Name}</p>\r\n            </div>\r\n            ))}\r\n            <button onClick={addChannel}>add</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Channels;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5C,SAASC,QAAQA,CAAC;EAAEC;AAAO,CAAC,EAC5B;EAAAC,EAAA;EACI,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACvC;EACAC,SAAS,CAAC,MAAM;IACZQ,WAAW,CAAC,CAAC;EACjB,CAAC,CAAC;EACF,SAASC,UAAUA,CAAA,EACnB;IACIC,KAAK,CAAC,kCAAkC,EACxC;MACIC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,IAAIC,eAAe,CAAC;QACtBC,IAAI,EAAE,SAAS;QACfC,WAAW,EAAE;MACjB,CAAC;IACL,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAAC,CAC5BD,IAAI,CAACE,IAAI,IACR;MACEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CAACF,IAAI,CAACK,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAC9CC,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC;EACA,SAASf,WAAWA,CAAA,EACpB;IACIE,KAAK,CAAC,mCAAmC,EACzC;MACIC,MAAM,EAAE,KAAK;MACb;MACA;MACA;MACAa,OAAO,EAAE;QACL,cAAc,EAAE;MAChB;IACR,CACA,CAAC,CAACR,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAACT,IAAI,CAACC,QAAQ,IAAIV,OAAO,CAACU,QAAQ,CAAC,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC,CAAC;IAC5G;EACJ;;EACA,oBACIrB,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,GAC7BrB,OAAO,CAACsB,GAAG,CAACC,OAAO,iBACpB3B,OAAA;MAAAyB,QAAA,eACIzB,OAAA;QAAAyB,QAAA,GAAG,GAAC,EAACE,OAAO,CAACC,IAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CACJ,CAAC,eACFhC,OAAA;MAAQiC,OAAO,EAAE1B,UAAW;MAAAkB,QAAA,EAAC;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd;AAAC7B,EAAA,CAhDQF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAgDhB;AAED,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}