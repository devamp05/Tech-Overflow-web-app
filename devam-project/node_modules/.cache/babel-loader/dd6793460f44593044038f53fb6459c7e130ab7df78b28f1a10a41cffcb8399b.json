{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\Comment.js\",\n  _s = $RefreshSig$();\n// import { Link } from \"react-router-dom\";\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment({\n  postId,\n  username\n}) {\n  _s();\n  // useRef for comment\n  const comment = useRef();\n  function addComment() {\n    // console.log(comment.current.value);\n    // console.log(postId);\n\n    fetch('http://localhost:8080/addComment', {\n      method: 'Post',\n      body: new URLSearchParams({\n        username: username,\n        comment: comment.current.value,\n        postId: postId\n      }),\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(response => response).then(data => {\n      console.log(data);\n    }).then(alert(\"comment added!\")).then(comment.current.value = \"\").catch(error => console.error(error));\n    // comment.current.value = \"\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"comment\",\n      children: \" Add comment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"commentId\",\n      ref: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 63\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addComment,\n      children: \"post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Comment, \"zO30MhTsyTqjbJ8wDyAkCONu6fk=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["useRef","jsxDEV","_jsxDEV","Comment","postId","username","_s","comment","addComment","fetch","method","body","URLSearchParams","current","value","headers","then","response","data","console","log","alert","catch","error","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/Comment.js"],"sourcesContent":["// import { Link } from \"react-router-dom\";\r\nimport { useRef } from 'react';\r\n\r\nfunction Comment({ postId, username })\r\n{\r\n    // useRef for comment\r\n    const comment = useRef();\r\n    function addComment()\r\n    {\r\n        // console.log(comment.current.value);\r\n        // console.log(postId);\r\n\r\n        fetch('http://localhost:8080/addComment',{\r\n            method: 'Post',\r\n            body: new URLSearchParams({\r\n                username: username,\r\n                comment: comment.current.value,\r\n                postId: postId\r\n                }),\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded\"\r\n                }\r\n        }).then(response => response)\r\n        .then(data =>\r\n          {\r\n            console.log(data)\r\n          }).then(alert(\"comment added!\")).then(comment.current.value = \"\")\r\n        .catch(error => console.error(error))\r\n        // comment.current.value = \"\";\r\n    }\r\n    return(\r\n        <div className=\"commentClass\">\r\n            <label htmlFor=\"comment\"> Add comment:</label><br />\r\n            <input type=\"text\" id=\"commentId\" ref={comment} /><br />\r\n            <button onClick={addComment}>post</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;"],"mappings":";;AAAA;AACA,SAASA,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,OAAOA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EACrC;EAAAC,EAAA;EACI;EACA,MAAMC,OAAO,GAAGP,MAAM,CAAC,CAAC;EACxB,SAASQ,UAAUA,CAAA,EACnB;IACI;IACA;;IAEAC,KAAK,CAAC,kCAAkC,EAAC;MACrCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,IAAIC,eAAe,CAAC;QACtBP,QAAQ,EAAEA,QAAQ;QAClBE,OAAO,EAAEA,OAAO,CAACM,OAAO,CAACC,KAAK;QAC9BV,MAAM,EAAEA;MACR,CAAC,CAAC;MACNW,OAAO,EAAE;QACL,cAAc,EAAE;MAChB;IACR,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAAC,CAC5BD,IAAI,CAACE,IAAI,IACR;MACEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CAACF,IAAI,CAACK,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAACL,IAAI,CAACT,OAAO,CAACM,OAAO,CAACC,KAAK,GAAG,EAAE,CAAC,CAClEQ,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC,CAAC;IACrC;EACJ;;EACA,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBvB,OAAA;MAAOwB,OAAO,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAAA5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpD5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,WAAW;MAACC,GAAG,EAAE1B;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAAA5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxD5B,OAAA;MAAQgC,OAAO,EAAE1B,UAAW;MAAAiB,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd;AAACxB,EAAA,CAlCQH,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}