{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\CommentsList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentLists({\n  postId\n}) {\n  _s();\n  const [getList, setList] = useState([]);\n  // To call geCommentst() everytime on load\n  useEffect(() => {\n    getComments();\n  });\n  function getComments() {\n    fetch('http://localhost:8080/getComments', {\n      method: Post,\n      body: new URLSearchParams({\n        postId: postId\n      }),\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentsListClass\",\n    children: getList.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", comment.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(CommentLists, \"QeJIt1OGIzLqKm9MlYFycMb6tSc=\");\n_c = CommentLists;\n;\nexport default CommentLists;\nvar _c;\n$RefreshReg$(_c, \"CommentLists\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","CommentLists","postId","_s","getList","setList","getComments","fetch","method","Post","body","URLSearchParams","headers","then","response","json","catch","error","console","className","children","map","comment","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/CommentsList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nfunction CommentLists({ postId })\r\n{\r\n    const [getList, setList] = useState([]);\r\n    // To call geCommentst() everytime on load\r\n    useEffect(() => {\r\n        getComments();\r\n    });\r\n    function getComments()\r\n    {\r\n        fetch(\r\n            'http://localhost:8080/getComments',\r\n        {\r\n            method: Post,\r\n            body: new URLSearchParams({\r\n                postId: postId\r\n                }),\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded\"\r\n                }\r\n        }\r\n        ).then(response => response.json()).then(response => setList(response)).catch(error => console.error(error))\r\n    }\r\n    return(\r\n        <div className=\"commentsListClass\" >\r\n            {getList.map(comment => (\r\n            <div>\r\n                <p> {comment.comment}</p>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CommentLists;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5C,SAASC,YAAYA,CAAC;EAAEC;AAAO,CAAC,EAChC;EAAAC,EAAA;EACI,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACvC;EACAC,SAAS,CAAC,MAAM;IACZQ,WAAW,CAAC,CAAC;EACjB,CAAC,CAAC;EACF,SAASA,WAAWA,CAAA,EACpB;IACIC,KAAK,CACD,mCAAmC,EACvC;MACIC,MAAM,EAAEC,IAAI;MACZC,IAAI,EAAE,IAAIC,eAAe,CAAC;QACtBT,MAAM,EAAEA;MACR,CAAC,CAAC;MACNU,OAAO,EAAE;QACL,cAAc,EAAE;MAChB;IACR,CACA,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACC,QAAQ,IAAIT,OAAO,CAACS,QAAQ,CAAC,CAAC,CAACE,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAChH;EACA,oBACIjB,OAAA;IAAKmB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC7BhB,OAAO,CAACiB,GAAG,CAACC,OAAO,iBACpBtB,OAAA;MAAAoB,QAAA,eACIpB,OAAA;QAAAoB,QAAA,GAAG,GAAC,EAACE,OAAO,CAACA,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACvB,EAAA,CA/BQF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA+BpB;AAED,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}