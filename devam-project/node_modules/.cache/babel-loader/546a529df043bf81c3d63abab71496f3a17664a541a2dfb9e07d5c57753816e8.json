{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devam\\\\CMPT353\\\\Project\\\\devam-project\\\\src\\\\Comment.js\",\n  _s = $RefreshSig$();\n// // import { Link } from \"react-router-dom\";\n// import { useRef } from 'react';\n\n// function Comment({ postId, username })\n// {\n//     // useRef for comment\n//     const comment = useRef();\n//     function addComment()\n//     {\n//         // console.log(comment.current.value);\n//         // console.log(postId);\n\n//         fetch('http://localhost:8080/addComment',{\n//             method: 'Post',\n//             body: new URLSearchParams({\n//                 username: username,\n//                 comment: comment.current.value,\n//                 postId: postId\n//                 }),\n//             headers: {\n//                 \"Content-type\": \"application/x-www-form-urlencoded\"\n//                 }\n//         }).then(response => response)\n//         .then(data =>\n//           {\n//             console.log(data)\n//           }).then(alert(\"comment added!\")).then(comment.current.value = \"\")\n//         .catch(error => console.error(error))\n//         // comment.current.value = \"\";\n//     }\n//     return(\n//         <div className=\"commentClass\">\n//             <label htmlFor=\"comment\"> Add comment:</label><br />\n//             <input type=\"text\" id=\"commentId\" ref={comment} /><br />\n//             <button onClick={addComment}>post</button>\n//         </div>\n//     )\n// }\n\n// export default Comment;\n\nimport React, { useRef } from 'react';\nimport './Comment.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment({\n  postId,\n  username\n}) {\n  _s();\n  const comment = useRef();\n  function addComment() {\n    fetch('http://localhost:8080/addComment', {\n      method: 'Post',\n      body: new URLSearchParams({\n        username: username,\n        comment: comment.current.value,\n        postId: postId\n      }),\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => response).then(data => {\n      console.log(data);\n    }).then(() => {\n      alert('Comment added!');\n      comment.current.value = '';\n    }).catch(error => console.error(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"comment\",\n      children: \"Add comment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"commentId\",\n        ref: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addComment,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"zO30MhTsyTqjbJ8wDyAkCONu6fk=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Comment","postId","username","_s","comment","addComment","fetch","method","body","URLSearchParams","current","value","headers","then","response","data","console","log","alert","catch","error","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/devam/CMPT353/Project/devam-project/src/Comment.js"],"sourcesContent":["// // import { Link } from \"react-router-dom\";\r\n// import { useRef } from 'react';\r\n\r\n// function Comment({ postId, username })\r\n// {\r\n//     // useRef for comment\r\n//     const comment = useRef();\r\n//     function addComment()\r\n//     {\r\n//         // console.log(comment.current.value);\r\n//         // console.log(postId);\r\n\r\n//         fetch('http://localhost:8080/addComment',{\r\n//             method: 'Post',\r\n//             body: new URLSearchParams({\r\n//                 username: username,\r\n//                 comment: comment.current.value,\r\n//                 postId: postId\r\n//                 }),\r\n//             headers: {\r\n//                 \"Content-type\": \"application/x-www-form-urlencoded\"\r\n//                 }\r\n//         }).then(response => response)\r\n//         .then(data =>\r\n//           {\r\n//             console.log(data)\r\n//           }).then(alert(\"comment added!\")).then(comment.current.value = \"\")\r\n//         .catch(error => console.error(error))\r\n//         // comment.current.value = \"\";\r\n//     }\r\n//     return(\r\n//         <div className=\"commentClass\">\r\n//             <label htmlFor=\"comment\"> Add comment:</label><br />\r\n//             <input type=\"text\" id=\"commentId\" ref={comment} /><br />\r\n//             <button onClick={addComment}>post</button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Comment;\r\n\r\n\r\nimport React, { useRef } from 'react';\r\nimport './Comment.css'; // Import your CSS file\r\n\r\nfunction Comment({ postId, username }) {\r\n  const comment = useRef();\r\n\r\n  function addComment() {\r\n    fetch('http://localhost:8080/addComment', {\r\n      method: 'Post',\r\n      body: new URLSearchParams({\r\n        username: username,\r\n        comment: comment.current.value,\r\n        postId: postId,\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n    })\r\n      .then((response) => response)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .then(() => {\r\n        alert('Comment added!');\r\n        comment.current.value = '';\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <div className=\"commentClass\">\r\n      <label htmlFor=\"comment\">Add comment:</label>\r\n      <div className=\"comment-input\">\r\n        <input type=\"text\" id=\"commentId\" ref={comment} />\r\n        <button onClick={addComment}>Post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,OAAOA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAMC,OAAO,GAAGP,MAAM,CAAC,CAAC;EAExB,SAASQ,UAAUA,CAAA,EAAG;IACpBC,KAAK,CAAC,kCAAkC,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,IAAIC,eAAe,CAAC;QACxBP,QAAQ,EAAEA,QAAQ;QAClBE,OAAO,EAAEA,OAAO,CAACM,OAAO,CAACC,KAAK;QAC9BV,MAAM,EAAEA;MACV,CAAC,CAAC;MACFW,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAAC,CAC5BD,IAAI,CAAEE,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CACDF,IAAI,CAAC,MAAM;MACVK,KAAK,CAAC,gBAAgB,CAAC;MACvBd,OAAO,CAACM,OAAO,CAACC,KAAK,GAAG,EAAE;IAC5B,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C;EAEA,oBACErB,OAAA;IAAKsB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BvB,OAAA;MAAOwB,OAAO,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC7C5B,OAAA;MAAKsB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BvB,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,WAAW;QAACC,GAAG,EAAE1B;MAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD5B,OAAA;QAAQgC,OAAO,EAAE1B,UAAW;QAAAiB,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAnCQH,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAqChB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}